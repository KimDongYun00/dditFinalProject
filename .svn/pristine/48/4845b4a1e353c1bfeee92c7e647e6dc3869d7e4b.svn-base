package kr.or.ddit.controller.professor;

import java.util.List;

import javax.inject.Inject;

import org.springframework.security.access.method.P;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import kr.or.ddit.service.professor.IProLectureService;
import kr.or.ddit.vo.AssignmentVO;
import kr.or.ddit.vo.CustomUser;
import kr.or.ddit.vo.ExamVO;
import kr.or.ddit.vo.LectureNoticeVO;
import kr.or.ddit.vo.LectureVO;
import kr.or.ddit.vo.PaginationInfoVO;
import kr.or.ddit.vo.UserVO;
import lombok.extern.slf4j.Slf4j;

@Controller
@Slf4j
@RequestMapping("/professor")
public class ProLecController {
	
	@Inject
	private IProLectureService lectureService;
	
	@RequestMapping(value = "/lectureList.do" , method = RequestMethod.GET)
	public String lectureList(Model model, LectureVO lectureVO) {
		log.info("lectureList 실행 !!!");
		CustomUser user = 
				(CustomUser) SecurityContextHolder.getContext().getAuthentication().getPrincipal();
		UserVO userVO = user.getUser();
		
		
		List<LectureVO> lectureList = lectureService.lectureList(userVO.getUserNo());
		model.addAttribute("lectureList",lectureList);
		
		return "professor/lecture/lectureList";
	}
	
	// 강의 상세보기 시 게시판 3 개
	@RequestMapping(value = "/lectureDetail.do", method = RequestMethod.GET)
	public String lectureDetail(String lecNo,Model model) {
		// 해당 강의 모든 정보 
		LectureVO lectureVO = new LectureVO();
		lectureVO = lectureService.selectLecture(lecNo);
		model.addAttribute("lectureVO",lectureVO);
		
		// 강의 공지 게시판
		LectureNoticeVO lectureNoticeVO = new LectureNoticeVO();
		lectureNoticeVO.setLecNo(lecNo);
		List<LectureNoticeVO> lectureNoticeList = lectureService.selectLectureNotice(lecNo);
		model.addAttribute("lectureNoticeList",lectureNoticeList);
		
		// 과제 게시판
		AssignmentVO assignmentVO = new AssignmentVO();
		assignmentVO.setLecNo(lecNo);
		List<AssignmentVO> assignmentList= lectureService.selectAssignment(lecNo);
		model.addAttribute("assignmentList",assignmentList);
		
		// 시험 게시판 
		ExamVO examVO = new ExamVO();
		examVO.setLecNo(lecNo);
		List<ExamVO> examList = lectureService.selectExam(lecNo);
		model.addAttribute("examList",examList);
		
		model.addAttribute("lecNo",lecNo);
		
		return "professor/lecture/lectureDetail";
	}
	
	@RequestMapping(value = "/selectAssignmentList.do", method = RequestMethod.GET)
	public String selectAssignmentList(String lecNo,Model model,
			@RequestParam(name = "page", required = false, defaultValue = "1") int currentPage) {
		
		log.info("selectAssignmentList 실행!!!!!!!!");
		PaginationInfoVO<AssignmentVO> pagingVO = new PaginationInfoVO<AssignmentVO>();
		
		// 현재 페이지를 전달 후, start/endRow, start/endPage 설정
		pagingVO.setCurrentPage(currentPage);
		pagingVO.setLecNo(lecNo);
		// 총 게시글 수를 얻어온다.
		int totalRecord = lectureService.selectAssignmentCount(pagingVO);
		// 총 게시글 수를 전달 후, 총 페이지 수를 설정
		pagingVO.setTotalRecord(totalRecord);
		// 총 게시글수가 포함된 PaginationInfoVO객체를 넘겨주고 1페이지에 해당하는 10개(screenSize)의
		// 게시글을 얻어온다. (dataList)
		List<AssignmentVO> assignmentList = lectureService.selectAssignmentList(pagingVO);
		pagingVO.setDataList(assignmentList);
		
		model.addAttribute("pagingVO", pagingVO);
		model.addAttribute("lecNo",lecNo);
		return "professor/lecture/assignmentList";
	}
}
