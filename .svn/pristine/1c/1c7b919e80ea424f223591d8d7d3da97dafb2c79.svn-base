<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.mapper.IAdminLectureMapper">

	<sql id="lectureSearchSql">
		<if test="searchType == 1">
			and lec_name like '%'||#{searchWord}||'%'
		</if>
		<if test="searchType == 2">
			and b.pro_name like '%'||#{searchWord}||'%'
		</if>
		<if test="searchLecType != null and searchLecType != ''">
			and COM_DET_L_NO = #{searchLecType}
		</if>
		<if test="searchConType != null and searchConType != ''">
			and COM_DET_C_NO = #{searchConType}
		</if>
		<if test="searchScore != 99">
			and lec_score = #{searchScore}
		</if>
		<if test="searchOnoff != null and searchOnoff != ''">
			and lec_onoff = #{searchOnoff}
		</if>
		<if test="searchYear != 99">
			and year = #{searchYear}
		</if>
		<if test="searchSemester != 99">
			and semester = #{searchSemester}
		</if>
		<if test="searchAge != 99">
			and lec_age = #{searchAge}
		</if>
	</sql>
	
	<select id="selectLectureCount" parameterType="pagingVO" resultType="int">
		select count(a.lec_no)
		from lecture a, professor b
		where 1=1
		and a.pro_no = b.pro_no
		and lec_del = 'N'
		<include refid="lectureSearchSql"/>
	</select>
	
	<select id="getLectureList" parameterType="pagingVO" resultType="lectureVO">
		select
            c.*
        from( 
	        select
				a.*, row_number() over(order by a.LEC_NO) AS rnum
			from(select 
					LEC_NO
					,a.PRO_NO
					,b.pro_name
					,SUB_NO
					,FAC_NO
					,LEC_NAME
					,LEC_MAX
					,LEC_NOW
					,LEC_ONOFF
					,LEC_AGE
					,LEC_SCORE
					,COM_DET_L_NO
					,(select com_det_name from common_code_detail where com_det_no = com_det_l_no) com_det_l_name
					,COM_DET_C_NO
					,(select com_det_name from common_code_detail where com_det_no = com_det_c_no) com_det_c_name
					,YEAR
					,SEMESTER
				from lecture a, professor b
				where 1=1
				and a.pro_no = b.pro_no
				and lec_del = 'N'
				<include refid="lectureSearchSql"/>
				order by a.LEC_NO desc
				)a
	        )c
        <![CDATA[
			where c.rnum >= #{startRow} and c.rnum <= #{endRow}	
		]]> 
	</select>
	
	<insert id="insertLecture" parameterType="lectureVO" useGeneratedKeys="true">
		<selectKey keyProperty="lecNo" resultType="String" order="BEFORE">
			select 'LEC_'||seq_lecture.nextval from dual
		</selectKey>
		insert into lecture(
			LEC_NO
			,PRO_NO
			,SUB_NO
			,FAC_NO
			,LEC_NAME
			,LEC_EXPLAIN
			,LEC_MAX
			,LEC_NOW
			,LEC_ONOFF
			,LEC_AGE
			,LEC_SCORE
			,COM_DET_L_NO
			,COM_DET_C_NO
			,FILE_GROUP_NO
			,YEAR
			,SEMESTER
			,LEC_MID_RATE
			,LEC_LAST_RATE
			,LEC_ASS_RATE
			,LEC_EXAM_RATE
			,LEC_AD_RATE
			,LEC_AT_RATE
		) values(
			#{lecNo}
			,#{proNo}
			,#{subNo}
			,#{facNo}
			,#{lecName}
			,#{lecExplain}
			,#{lecMax}
			,null
			,#{lecOnoff}
			,#{lecAge}
			,#{lecScore}
			,#{comDetLNo}
			,'C0101'
			,null
			,#{year}
			,#{semester}
			,#{lecMidRate}
			,#{lecLastRate}
			,#{lecAssRate}
			,#{lecExamRate}
			,#{lecAdRate}
			,#{lecAtRate}
		)
	</insert>
	
	<insert id="insertLectureTime" parameterType="map">
		insert into LECTURE_TIMETABLE(
			LEC_TT_NO
			,LEC_NO
			,COM_DET_W_NO
			,COM_DET_T_NO
		) values (
			'LEC_TT_'||seq_LECTURE_TIMETABLE.nextval
			,#{lecNo}
			,#{day}
			,(select com_det_no from common_code_detail where com_det_name = #{time})
		)
	</insert>
	
	<select id="getLectureTimeList" parameterType="lectureVO" resultType="lectureTimetableVO">
		select 
			LEC_TT_NO
			,LEC_NO
			,COM_DET_W_NO
			,COM_DET_T_NO
			,(select com_det_name from COMMON_CODE_DETAIL b where b.com_det_no = a.com_det_t_no) com_det_t_name
		from LECTURE_TIMETABLE a 
		where lec_no in (select lec_no 
							from lecture 
							where fac_no = #{facNo}
							and year = ${year}
							and semester = ${semester}
							and lec_del = 'N')
	</select>
	
	<select id="getLectureByLecNo" parameterType="String" resultType="lectureVO">
		select 
			LEC_NO
			,a.PRO_NO
			,b.pro_name
			,SUB_NO
			,(select sub_name from subject b where b.sub_no = a.sub_no) sub_name
			,FAC_NO
			,(select bui_name 
				from building b 
				where b.bui_no = (select c.bui_no 
									from facility c 
									where c.fac_no = a.fac_no)) bui_name
			,(select b.fac_name from facility b where b.fac_no = a.fac_no) fac_name						
			,LEC_NAME
			,LEC_EXPLAIN
			,LEC_MAX
			,LEC_NOW
			,LEC_ONOFF
			,LEC_AGE
			,LEC_SCORE
			,COM_DET_L_NO
			,(select com_det_name from common_code_detail where com_det_no = com_det_l_no) com_det_l_name
			,COM_DET_C_NO
			,(select com_det_name from common_code_detail where com_det_no = com_det_c_no) com_det_c_name
			,YEAR
			,SEMESTER
			,LEC_MID_RATE
			,LEC_LAST_RATE
			,LEC_ASS_RATE
			,LEC_EXAM_RATE
			,LEC_AD_RATE
			,LEC_AT_RATE
		from lecture a, professor b
		where 1=1
		and a.pro_no = b.pro_no
		and lec_del = 'N'
		and lec_no = #{lecNo}
	</select>
	
	<select id="getLectureTime" parameterType="String" resultType="lectureTimetableVO">
		select 
			LEC_TT_NO
			,LEC_NO
			,COM_DET_W_NO
			,COM_DET_T_NO
			,replace((select com_det_name from COMMON_CODE_DETAIL b where b.com_det_no = a.com_det_t_no), ':', '_') com_det_t_name
		from LECTURE_TIMETABLE a 
		where lec_no = #{lecNo}
	</select>
	
	<update id="lectureConfirm" parameterType="String">
		update lecture
		set 
			COM_DET_C_NO = 'C0101'
		where lec_no = #{lecNo}	
	</update>
	
	<update id="lectureReject" parameterType="String">
		update lecture
		set 
			COM_DET_C_NO = 'C0103'
		where lec_no = #{lecNo}	
	</update>
	

</mapper>


























