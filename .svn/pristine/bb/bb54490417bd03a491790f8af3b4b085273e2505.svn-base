package kr.or.ddit.service.student.impl;

import java.io.File;
import java.util.Collection;
import java.util.List;
import java.util.UUID;

import javax.annotation.Resource;
import javax.inject.Inject;

import org.springframework.stereotype.Service;

import kr.or.ddit.mapper.IFileMapper;
import kr.or.ddit.mapper.IStuScholarshipMapper;
import kr.or.ddit.service.student.inter.IStuScholarshipService;
import kr.or.ddit.vo.FileVO;
import kr.or.ddit.vo.ScholarshipVO;

@Service
public class StuScholarshipServiceImpl implements IStuScholarshipService {


	@Resource(name="uploadFolder")
	private String uploadPath;
	
	@Inject
	private IStuScholarshipMapper scholarshipMapper;
	
	@Inject
	private IFileMapper fileMapper;

	
	// 장학 종류 조회
	@Override
	public List<ScholarshipVO> scholarshipList() {
		return scholarshipMapper.scholarshipList();
	}

	// 장학 종류 상세보기
	@Override
	public List<ScholarshipVO> scholarshipDetail(String schNo) {
		return scholarshipMapper.scholarshipDetail(schNo);
	}

	// 선차감 목록 조회
	@Override
	public Collection<ScholarshipVO> preScholarshipList() {
		return scholarshipMapper.preScholarshipList();
	}

	// 후지급 목록 조회
	@Override
	public Collection<ScholarshipVO> postScholarshipList() {
		return scholarshipMapper.postScholarshipList();
	}

	// 내가 수혜받은 장학 내역 조회
	@Override
	public List<ScholarshipVO> myScholarshipList(String stuNo) {
		return scholarshipMapper.myScholarshipList(stuNo);
	}

	// 승인 목록 조회
	@Override
	public List<ScholarshipVO> approvedList(String stuNo) {
		return scholarshipMapper.approvedList(stuNo);
	}

	// 미승인 목록 조회
	@Override
	public List<ScholarshipVO> unApprovedList(String stuNo) {
		return scholarshipMapper.unApprovedList(stuNo);
	}

	// 반려 목록 조회
	@Override
	public List<ScholarshipVO> rejectedList(String stuNo) {
		return scholarshipMapper.rejectedList(stuNo);
	}

	// 장학금 신청
	@Override
	public boolean insertScholarshipRequest(ScholarshipVO scholarshipVO) {
		int result =  scholarshipMapper.insertScholarshipRequest(scholarshipVO);
		 if (result < 0) {
	            return false;
	        } else {
	            List<FileVO> schFileList = scholarshipVO.getSchFileList();
	            try {
	                //String currentDate = new SimpleDateFormat("yyyy/MM/dd").format(new Date());

	                String fileGroupNo = schFileUpload(schFileList);
	                scholarshipVO.setFileGroupNo(fileGroupNo);
	         
	                scholarshipMapper.insertFileGroupNoToScholarship(scholarshipVO);
	            } catch (Exception e) {
	                e.printStackTrace();
	            }
	        }
	        return true;
	}
	
	 // 장학금 파일 첨부
    private String schFileUpload(List<FileVO> schFileList) throws Exception {
        if (schFileList != null) { // 넘겨받은 파일 데이터가 존재할 때
            String fileGroupNo = fileMapper.getFileGroupNo(); // 파일 그룹번호 시퀀스값 가져오기
            
            if (schFileList.size() > 0) {
                for (int i = 0; i < schFileList.size(); i++) {
                    FileVO fileVO = schFileList.get(i);
                    // 파일명을 설정할 때 원본 파일명은 공백을 '_' 로 변경한다.
                    String saveName = UUID.randomUUID().toString(); // UUID의 랜덤 파일명의 생성
                    saveName = saveName + "_" + fileVO.getFileName().replaceAll(" ", "_");
                    String savePath = uploadPath + "/scholarship/" + fileGroupNo;
                    File file = new File(savePath);
                    if (!file.exists()) {
                        file.mkdirs();
                    }

                    // 파일 복사를 하기 위한 최종 경로
                    String saveLocate = savePath + "/" + saveName;

                    fileVO.setFileGroupNo(fileGroupNo);
                    fileVO.setFileNo(i + 1);
                    fileVO.setFileSaveName(saveName);
                    fileVO.setFileSavepath(saveLocate);
                    fileMapper.insertSchFile(fileVO); // 파일 데이터를 DB에 저장

                    // 파일 복사를 하기 위한 target
                    File saveFile = new File(saveLocate);
                    fileVO.getItem().transferTo(saveFile); // 파일 복사
                }
            }

            return fileGroupNo;
        }

        return null;
    }

	// 장학금 신청시 장학금번호로 장학금명 끌어오기
	@Override
	public ScholarshipVO getScholarshipByNo(String schNo) {
		return scholarshipMapper.getScholarshipByNo(schNo);
	}

	// 내가 신청한 내역 상세보기
	@Override
	public ScholarshipVO myRequestDetail(String schRecNo) {
		return scholarshipMapper.myRequestDetail(schRecNo);
	}

	
	
}
