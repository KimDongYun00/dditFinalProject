package kr.or.ddit.tuition.controller;

import java.util.List;

import javax.inject.Inject;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import kr.or.ddit.service.admin.inter.IAdminCommonService;
import kr.or.ddit.service.admin.inter.IAdminDepartmentService;
import kr.or.ddit.service.common.IYearSemesterService;
import kr.or.ddit.tuition.service.ITuitionService;
import kr.or.ddit.vo.CommonVO;
import kr.or.ddit.vo.DepartmentVO;
import kr.or.ddit.vo.LectureVO;
import kr.or.ddit.vo.PaginationInfoVO;
import kr.or.ddit.vo.TuitionVO;
import kr.or.ddit.vo.YearSemesterVO;
import lombok.extern.slf4j.Slf4j;

@Controller
@Slf4j
@RequestMapping("/tuition")
public class TuitionController {
	
	@Inject
	private IYearSemesterService ysService;
	
	@Inject
	private IAdminCommonService comService;
	
	@Inject
	private IAdminDepartmentService deptService;

	@Inject
	private ITuitionService tuiService;
	
	@RequestMapping(value = "/tuitionList", method = RequestMethod.GET)
	public String tuitionManage(
			@RequestParam(name="page", required = false, defaultValue = "1") int currentPage,
			@RequestParam(required = false, defaultValue = "") String searchWord,
			@RequestParam(required = false, defaultValue = "99") int searchYear,
			@RequestParam(required = false, defaultValue = "99") int searchSemester,
			Model model) {
		
		PaginationInfoVO<TuitionVO> pagingVO = new PaginationInfoVO<TuitionVO>();
		
		pagingVO.setCurrentPage(currentPage);
		pagingVO.setSearchWord(searchWord);				// 검색어
		pagingVO.setSearchYear(searchYear);				// 년도
		pagingVO.setSearchSemester(searchSemester);		// 학기
		
		int totalRecord = tuiService.selectTuitionCount(pagingVO);
		pagingVO.setTotalRecord(totalRecord);
		
		List<TuitionVO> dataList = tuiService.getTuitionList(pagingVO);
		pagingVO.setDataList(dataList);
		
		List<String> yearList = tuiService.getYearList();
		List<DepartmentVO> deptList = deptService.getDeptNameList();
		List<CommonVO> bankList = comService.getComDetailList("B01");	//은행코드
		List<YearSemesterVO> ysList = ysService.getAllYear();
		
		model.addAttribute("pagingVO", pagingVO);
		model.addAttribute("yearList", yearList);
		model.addAttribute("deptList", deptList);
		model.addAttribute("bankList", bankList);
		model.addAttribute("ysList", ysList);
		
		return "sum/tuition/tuitionList";
	}
	
	@RequestMapping(value = "/insertTuition", method = RequestMethod.POST)
	public String insertTuition(TuitionVO tuiVO, RedirectAttributes ra) {
		
		int cnt = tuiService.insertTuition(tuiVO);
		if(cnt > 0) {
			ra.addFlashAttribute("msg", "등록성공!");
		} else {
			ra.addFlashAttribute("msg", "등록실패");
		}
		
		return "redirect:/tuition/tuitionList";
	}
	
	@RequestMapping(value = "/updateTuition", method = RequestMethod.POST)
	public String updateTuition(TuitionVO tuiVO, RedirectAttributes ra) {
		
		int cnt = tuiService.updateTuition(tuiVO);
		if(cnt > 0) {
			ra.addFlashAttribute("msg", "수정성공!");
		} else {
			ra.addFlashAttribute("msg", "수정실패");
		}
		
		return "redirect:/tuition/tuitionList";
	}
	
	@RequestMapping(value = "/deleteTuition", method = RequestMethod.POST)
	public String deleteTuition(TuitionVO tuiVO, RedirectAttributes ra) {
		
		int cnt = tuiService.deleteTuition(tuiVO);
		if(cnt > 0) {
			ra.addFlashAttribute("msg", "삭제성공!");
		} else {
			ra.addFlashAttribute("msg", "삭제실패");
		}
		
		return "redirect:/tuition/tuitionList";
	}
	
	@RequestMapping(value = "/tuitionSubmit", method = RequestMethod.GET)
	public String submitTuitionPage(Model model) {
		
		
		return "";
	}
	
	
	
}
















