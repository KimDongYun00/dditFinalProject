package kr.or.ddit.online.controller;

import java.util.Map;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import lombok.extern.slf4j.Slf4j;
import okhttp3.MediaType;
import okhttp3.OkHttpClient;
import okhttp3.Request;
import okhttp3.RequestBody;
import okhttp3.Response;

@Controller
@Slf4j
@RequestMapping("/online")
public class OnlineController {

	
	
	@RequestMapping(value="/onlineLecture", method = RequestMethod.GET)
	public String onlineLecture(String lecNo, Model model) {
		
		
		return "sum/online/onlineLecture";
	}
	
	@ResponseBody
	@RequestMapping(value = "/createRoom", method = RequestMethod.POST)
	public String createRoom(
			String roomType
			,String roomTitle
			,String maxJoinCount
			,String durationMinutes
			) throws Exception {
		OkHttpClient client = new OkHttpClient();

		MediaType mediaType = MediaType.parse("application/x-www-form-urlencoded");
		RequestBody body = RequestBody.create(mediaType, 
				"callType=P2P&liveMode=false&maxJoinCount=4&liveMaxJoinCount=100&layoutType=4&sfuIncludeAll=true"
				+"&roomType="+roomType+"&roomTitle="+roomTitle+"&maxJoinCount="+maxJoinCount+"&durationMinutes="+durationMinutes);
		Request request = new Request.Builder()
		  .url("https://openapi.gooroomee.com/api/v1/room")
		  .post(body)
		  .addHeader("accept", "application/json")
		  .addHeader("content-type", "application/x-www-form-urlencoded")
		  .addHeader("X-GRM-AuthToken", "12056163501988613cf51b7b51cdd8140bb172761d02211a8b")
		  .build();

		Response response = client.newCall(request).execute();
		return response.body().string();
	}
	
	@ResponseBody
	@RequestMapping(value = "/roomList", method = RequestMethod.POST)
	public String roomList() throws Exception {
		OkHttpClient client = new OkHttpClient();

		Request request = new Request.Builder()
		  .url("https://openapi.gooroomee.com/api/v1/room/list?page=1&limit=10&sortCurrJoinCnt=true")
		  .get()
		  .addHeader("accept", "application/json")
		  .addHeader("X-GRM-AuthToken", "12056163501988613cf51b7b51cdd8140bb172761d02211a8b")
		  .build();

		Response response = client.newCall(request).execute();
	    return response.body().string();
	}
	
	@ResponseBody
	@RequestMapping(value = "/enterRoom", method = RequestMethod.POST)
	public String enterRoom(String roomId, String username) throws Exception {
		OkHttpClient client = new OkHttpClient();

		MediaType mediaType = MediaType.parse("application/x-www-form-urlencoded");
		RequestBody body = RequestBody.create(mediaType, "roleId=participant&apiUserId=gooroomee-tester&ignorePasswd=false&roomId="+roomId+"&username="+username);
		Request request = new Request.Builder()
		  .url("https://openapi.gooroomee.com/api/v1/room/user/otp/url")
		  .post(body)
		  .addHeader("accept", "application/json")
		  .addHeader("content-type", "application/x-www-form-urlencoded")
		  .addHeader("X-GRM-AuthToken", "12056163501988613cf51b7b51cdd8140bb172761d02211a8b")
		  .build();

		Response response = client.newCall(request).execute();
		return response.body().string();
	}
	
	@ResponseBody
	@RequestMapping(value = "/deleteRoom", method = RequestMethod.POST)
	public String deleteRoom(String roomId) throws Exception {
		OkHttpClient client = new OkHttpClient();

		Request request = new Request.Builder()
		  .url("https://openapi.gooroomee.com/api/v1/room/"+roomId)
		  .delete(null)
		  .addHeader("accept", "application/json")
		  .addHeader("X-GRM-AuthToken", "12056163501988613cf51b7b51cdd8140bb172761d02211a8b")
		  .build();

		Response response = client.newCall(request).execute();
		return response.body().string();
	}
	
	
	
	
	
	
	
	
}


























